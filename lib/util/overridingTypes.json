{
    "mixins": {
        "mixin": {
            "GlobalFetch": {
                "name": "GlobalFetch",
                "methods": {
                    "method": {
                        "fetch": {
                            "name": "fetch",
                            "override-signatures": [
                                "fetch(input: RequestInfo, init?: RequestInit): Promise<Response>"
                            ]
                        }
                    }
                }
            },
            "Animatable": {
                "name": "Animatable",
                "methods": {
                    "method": {
                        "animate": {
                            "name": "animate",
                            "override-signatures": [
                                "animate(keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeAnimationOptions): Animation"
                            ]
                        }
                    }
                }
            },
            "ChildNode": {
                "name": "ChildNode",
                "extends": "Node"
            },
            "GlobalEventHandlers": {
                "name": "GlobalEventHandlers",
                "events": {
                    "event": [
                        {
                            "name": "animationcancel",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "animationend",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "animationiteration",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "animationstart",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "gotpointercapture",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "lostpointercapture",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointercancel",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerdown",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerenter",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerleave",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointermove",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerout",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerover",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerup",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "touchcancel",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchend",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchmove",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchstart",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "transitionrun",
                            "type": "TransitionEvent"
                        },
                        {
                            "name": "transitionstart",
                            "type": "TransitionEvent"
                        },
                        {
                            "name": "transitionend",
                            "type": "TransitionEvent"
                        },
                        {
                            "name": "transitioncancel",
                            "type": "TransitionEvent"
                        }
                    ]
                },
                "properties": {
                    "property": {
                        "onerror": {
                            "override-type": "OnErrorEventHandler"
                        }
                    }
                }
            },
            "HTMLOrSVGElement": {
              "name": "HTMLOrSVGElement",
              "properties": {
                "property": {
                  "nonce": {
                    "name": "nonce?"
                  }
                }
              }
            },
            "RandomSource": {
                "name": "RandomSource",
                "methods": {
                    "method": {
                        "getRandomValues": {
                            "name": "getRandomValues",
                            "override-signatures": [
                                "getRandomValues<T extends Int8Array | Uint8ClampedArray | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array>(array: T): T"
                            ]
                        }
                    }
                }
            },
            "WebGLRenderingContextBase": {
                "name": "WebGLRenderingContextBase",
                "methods": {
                    "method": {
                        "getExtension": {
                            "name": "getExtension",
                            "override-signatures": [
                                "getExtension(extensionName: \"EXT_blend_minmax\"): EXT_blend_minmax | null",
                                "getExtension(extensionName: \"EXT_texture_filter_anisotropic\"): EXT_texture_filter_anisotropic | null",
                                "getExtension(extensionName: \"EXT_frag_depth\"): EXT_frag_depth | null",
                                "getExtension(extensionName: \"EXT_shader_texture_lod\"): EXT_shader_texture_lod | null",
                                "getExtension(extensionName: \"EXT_sRGB\"): EXT_sRGB | null",
                                "getExtension(extensionName: \"OES_vertex_array_object\"): OES_vertex_array_object | null",
                                "getExtension(extensionName: \"WEBGL_color_buffer_float\"): WEBGL_color_buffer_float | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_astc\"): WEBGL_compressed_texture_astc | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc_srgb\"): WEBGL_compressed_texture_s3tc_srgb | null",
                                "getExtension(extensionName: \"WEBGL_debug_shaders\"): WEBGL_debug_shaders | null",
                                "getExtension(extensionName: \"WEBGL_draw_buffers\"): WEBGL_draw_buffers | null",
                                "getExtension(extensionName: \"WEBGL_lose_context\"): WEBGL_lose_context | null",
                                "getExtension(extensionName: \"WEBGL_depth_texture\"): WEBGL_depth_texture | null",
                                "getExtension(extensionName: \"WEBGL_debug_renderer_info\"): WEBGL_debug_renderer_info | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc\"): WEBGL_compressed_texture_s3tc | null",
                                "getExtension(extensionName: \"OES_texture_half_float_linear\"): OES_texture_half_float_linear | null",
                                "getExtension(extensionName: \"OES_texture_half_float\"): OES_texture_half_float | null",
                                "getExtension(extensionName: \"OES_texture_float_linear\"): OES_texture_float_linear | null",
                                "getExtension(extensionName: \"OES_texture_float\"): OES_texture_float | null",
                                "getExtension(extensionName: \"OES_standard_derivatives\"): OES_standard_derivatives | null",
                                "getExtension(extensionName: \"OES_element_index_uint\"): OES_element_index_uint | null",
                                "getExtension(extensionName: \"ANGLE_instanced_arrays\"): ANGLE_instanced_arrays | null",
                                "getExtension(extensionName: string): any"
                            ]
                        },
                        "pixelStorei": {
                            "name": "pixelStorei",
                            "override-signatures": [
                                "pixelStorei(pname: GLenum, param: GLint | GLboolean): void"
                            ]
                        }
                    }
                }
            },
            "Body": {
                "properties": {
                    "property": {
                        "body": {
                            "override-type": "ReadableStream<Uint8Array> | null"
                        }
                    }
                }
            }
        }
    },
    "callback-functions": {
        "callback-function": {
            "OnErrorEventHandlerNonNull": {
                "override-signatures": [
                    "(event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any"
                ]
            },
            "DecodeErrorCallback": {
                "name": "DecodeErrorCallback",
                "override-signatures": [
                    "(error: DOMException): void"
                ]
            },
            "QueuingStrategySizeCallback": {
                "type-parameters": [
                    {
                        "name": "T",
                        "default": "any"
                    }
                ],
                "override-signatures": [
                    "(chunk: T): number"
                ]
            },
            "ReadableByteStreamControllerCallback": {
                "override-signatures": [
                    "(controller: ReadableByteStreamController): void | PromiseLike<void>"
                ]
            },
            "ReadableStreamDefaultControllerCallback": {
                "type-parameters": [
                    {
                        "name": "R"
                    }
                ],
                "override-signatures": [
                    "(controller: ReadableStreamDefaultController<R>): void | PromiseLike<void>"
                ]
            },
            "ReadableStreamErrorCallback": {
                "override-signatures": [
                    "(reason: any): void | PromiseLike<void>"
                ]
            },
            "WritableStreamDefaultControllerStartCallback": {
                "override-signatures": [
                    "(controller: WritableStreamDefaultController): void | PromiseLike<void>"
                ]
            },
            "WritableStreamDefaultControllerWriteCallback": {
                "type-parameters": [
                    {
                        "name": "W"
                    }
                ],
                "override-signatures": [
                    "(chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>"
                ]
            },
            "WritableStreamDefaultControllerCloseCallback": {
                "override-signatures": [
                    "(): void | PromiseLike<void>"
                ]
            },
            "WritableStreamErrorCallback": {
                "override-signatures": [
                    "(reason: any): void | PromiseLike<void>"
                ]
            },
            "TransformStreamDefaultControllerCallback": {
                "type-parameters": [
                    {
                        "name": "O"
                    }
                ],
                "override-signatures": [
                    "(controller: TransformStreamDefaultController<O>): void | PromiseLike<void>"
                ]
            },
            "TransformStreamDefaultControllerTransformCallback": {
                "type-parameters": [
                    {
                        "name": "I"
                    },
                    {
                        "name": "O"
                    }
                ],
                "override-signatures": [
                    "(chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>"
                ]
            }
        }
    },
    "callback-interfaces": {
        "interface": {}
    },
    "enums": {
        "enum": {
            "ImportExportKind": {
                "legacy-namespace": "WebAssembly"
            },
            "TableKind": {
                "legacy-namespace": "WebAssembly"
            }
        }
    },
    "interfaces": {
        "interface": {
            "CryptoKey": {
                "properties": {
                    "property": {
                        "algorithm": {
                            "type": "KeyAlgorithm"
                        },
                        "usages": {
                            "type": "sequence",
                            "subtype": {
                                "type": "KeyUsage"
                            }
                        }
                    }
                }
            },
            "MediaQueryList": {
                "methods": {
                    "method": {
                        "addListener": {
                            "deprecated": 1,
                            "override-signatures": [
                                "addListener(listener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void"
                            ]
                        },
                        "removeListener": {
                            "deprecated": 1,
                            "override-signatures": [
                                "removeListener(listener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void"
                            ]
                        }
                    }
                },
                "events": {
                    "event": [
                        {
                            "name": "change",
                            "type": "MediaQueryListEvent"
                        }
                    ]
                }
            },
            "HTMLAnchorElement": {
                "name": "HTMLAnchorElement",
                "properties": {
                    "property": {
                        "relList": {
                            "read-only": 1,
                            "name": "relList",
                            "type": "DOMTokenList"
                        }
                    }
                }
            },
            "HTMLAreaElement": {
                "name": "HTMLAreaElement",
                "properties": {
                    "property": {
                        "relList": {
                            "read-only": 1,
                            "name": "relList",
                            "type": "DOMTokenList"
                        }
                    }
                }
            },
            "SourceBuffer": {
                "name": "SourceBuffer",
                "events": {
                    "event": [
                        {
                            "name": "abort",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "type": "Event"
                        }
                    ]
                }
            },
            "CustomEvent": {
                "name": "CustomEvent",
                "properties": {
                    "property": {
                        "detail": {
                            "name": "detail",
                            "read-only": 1,
                            "override-type": "T"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "initCustomEvent": {
                            "name": "initCustomEvent",
                            "override-signatures": [
                                "initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: T): void"
                            ]
                        }
                    }
                },
                "type-parameters": [
                    {
                        "name": "T",
                        "default": "any"
                    }
                ],
                "constructor": {
                    "override-signatures": [
                        "new<T>(typeArg: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>"
                    ]
                }
            },
            "Window": {
                "name": "Window",
                "properties": {
                    "property": {
                        "event": {
                            "name": "event",
                            "override-type": "Event | undefined",
                            "deprecated": 1
                        },
                        "orientation": {
                            "name": "orientation",
                            "override-type": "string | number"
                        },
                        "opener": {
                            "name": "opener",
                            "override-type": "any",
                            "read-only": 0
                        },
                        "location": {
                            "read-only": 0
                        }
                    }
                },
                "methods": {
                    "method": {
                        "open": {
                            "name": "open",
                            "override-signatures": [
                                "open(url?: string, target?: string, features?: string, replace?: boolean): Window | null"
                            ]
                        },
                        "alert": {
                            "name": "alert",
                            "override-signatures": [
                                "alert(message?: any): void"
                            ]
                        },
                        "postMessage": {
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void"
                            ]
                        }
                    }
                },
                "override-index-signatures": []
            },
            "Document": {
                "name": "Document",
                "methods": {
                    "method": {
                        "adoptNode": {
                            "name": "adoptNode",
                            "override-signatures": [
                                "adoptNode<T extends Node>(source: T): T"
                            ]
                        },
                        "importNode": {
                            "name": "importNode",
                            "override-signatures": [
                                "importNode<T extends Node>(importedNode: T, deep: boolean): T"
                            ]
                        },
                        "open": {
                            "name": "open",
                            "override-signatures": [
                                "open(url?: string, name?: string, features?: string, replace?: boolean): Document"
                            ]
                        },
                        "getElementById": {
                            "name": "getElementById",
                            "override-signatures": [
                                "getElementById(elementId: string): HTMLElement | null"
                            ]
                        },
                        "elementsFromPoint": {
                            "name": "elementsFromPoint",
                            "override-signatures": [
                                "elementsFromPoint(x: number, y: number): Element[]"
                            ]
                        },
                        "getElementsByTagNameNS": {
                            "name": "getElementsByTagNameNS",
                            "override-signatures": [
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>",
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<SVGElement>",
                                "getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>"
                            ]
                        },
                        "getElementsByClassName": {
                            "name": "getElementsByClassName",
                            "override-signatures": [
                                "getElementsByClassName(classNames: string): HTMLCollectionOf<Element>"
                            ]
                        },
                        "getElementsByName": {
                            "name": "getElementsByName",
                            "override-signatures": [
                                "getElementsByName(elementName: string): NodeListOf<HTMLElement>"
                            ]
                        },
                        "createTreeWalker": {
                            "signature": [
                                {
                                    "type": "TreeWalker",
                                    "param": [
                                        {
                                            "name": "root",
                                            "type": "Node"
                                        },
                                        {
                                            "name": "whatToShow",
                                            "type": "unsigned long"
                                        },
                                        {
                                            "name": "filter",
                                            "type": "NodeFilter",
                                            "nullable": 1
                                        },
                                        {
                                            "name": "entityReferenceExpansion",
                                            "type": "boolean",
                                            "optional": 1
                                        }
                                    ],
                                    "deprecated": 1
                                }
                            ]
                        },
                        "caretRangeFromPoint": {
                            "name": "caretRangeFromPoint",
                            "deprecated": 1,
                            "override-signatures" :[
                                "caretRangeFromPoint(x: number, y: number): Range"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "documentElement": {
                            "name": "documentElement",
                            "override-type": "HTMLElement",
                            "nullable": false
                        },
                        "head": {
                            "nullable": false
                        },
                        "anchors": {
                            "name": "anchors",
                            "override-type": "HTMLCollectionOf<HTMLAnchorElement>"
                        },
                        "applets": {
                            "name": "applets",
                            "override-type": "HTMLCollectionOf<HTMLAppletElement>"
                        },
                        "embeds": {
                            "name": "embeds",
                            "override-type": "HTMLCollectionOf<HTMLEmbedElement>"
                        },
                        "forms": {
                            "name": "forms",
                            "override-type": "HTMLCollectionOf<HTMLFormElement>"
                        },
                        "fullscreen": {
                            "deprecated": 1
                        },
                        "images": {
                            "name": "images",
                            "override-type": "HTMLCollectionOf<HTMLImageElement>"
                        },
                        "links": {
                            "name": "links",
                            "override-type": "HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>"
                        },
                        "plugins": {
                            "name": "plugins",
                            "override-type": "HTMLCollectionOf<HTMLEmbedElement>"
                        },
                        "scripts": {
                            "name": "scripts",
                            "override-type": "HTMLCollectionOf<HTMLScriptElement>"
                        },
                        "location": {
                            "read-only": 0,
                            "nullable": false
                        },
                        "body": {
                            "nullable": false
                       }
                    }
                }
            },
            "Node": {
                "name": "Node",
                "methods": {
                    "method": {
                        "appendChild": {
                            "name": "appendChild",
                            "override-signatures": [
                                "appendChild<T extends Node>(newChild: T): T"
                            ]
                        },
                        "insertBefore": {
                            "name": "insertBefore",
                            "override-signatures": [
                                "insertBefore<T extends Node>(newChild: T, refChild: Node | null): T"
                            ]
                        },
                        "removeChild": {
                            "name": "removeChild",
                            "override-signatures": [
                                "removeChild<T extends Node>(oldChild: T): T"
                            ]
                        },
                        "replaceChild": {
                            "name": "replaceChild",
                            "override-signatures": [
                                "replaceChild<T extends Node>(newChild: Node, oldChild: T): T"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "isConnected": {
                            "name": "isConnected",
                            "default": "false",
                            "read-only": 1,
                            "type-original": "boolean",
                            "type": "boolean"
                        },
                        "parentNode": {
                            "override-type": "Node & ParentNode | null"
                        },
                        "parentElement": {
                            "override-type": "HTMLElement | null"
                        },
                        "childNodes": {
                            "override-type": "NodeListOf<ChildNode>"
                        },
                        "firstChild": {
                            "override-type": "ChildNode | null"
                        },
                        "lastChild": {
                            "override-type": "ChildNode | null"
                        },
                        "namespaceURI": {
                            "name":"namespaceURI",
                            "read-only": 1,
                            "override-type": "string | null",
                            "deprecated": 1
                        },
                        "nextSibling": {
                            "override-type": "ChildNode | null"
                        }
                    }
                }
            },
            "IDBObjectStore": {
                "name": "IDBObjectStore",
                "methods": {
                    "method": {
                        "openCursor": {
                            "name": "openCursor",
                            "override-signatures": [
                                "openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>"
                            ]
                        },
                        "openKeyCursor": {
                            "name": "openKeyCursor",
                            "override-signatures": [
                                "openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>"
                            ]
                        },
                        "add": {
                            "name": "add",
                            "override-signatures": [
                                "add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>"
                            ]
                        },
                        "clear": {
                            "name": "clear",
                            "override-signatures": [
                                "clear(): IDBRequest<undefined>"
                            ]
                        },
                        "count": {
                            "name": "count",
                            "override-signatures": [
                                "count(key?: IDBValidKey | IDBKeyRange): IDBRequest<number>"
                            ]
                        },
                        "delete": {
                            "name": "delete",
                            "override-signatures": [
                                "delete(key: IDBValidKey | IDBKeyRange): IDBRequest<undefined>"
                            ]
                        },
                        "put": {
                            "name": "put",
                            "override-signatures": [
                                "put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>"
                            ]
                        },
                        "get": {
                            "name": "get",
                            "override-signatures": [
                                "get(query: IDBValidKey | IDBKeyRange): IDBRequest<any | undefined>"
                            ]
                        },
                        "getAll": {
                            "name": "getAll",
                            "override-signatures": [
                                "getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>"
                            ]
                        },
                        "getAllKeys": {
                            "name": "getAllKeys",
                            "override-signatures": [
                                "getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>"
                            ]
                        },
                        "getKey": {
                            "name": "getKey",
                            "override-signatures": [
                                "getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "keyPath": {
                            "name": "keyPath",
                            "override-type": "string | string[]"
                        }
                    }
                }
            },
            "MediaError": {
                "name": "MediaError",
                "properties": {
                    "property": {
                        "message": {
                            "specs": "html5",
                            "name": "message",
                            "tags": "Media",
                            "type": "DOMString",
                            "type-original": "DOMString",
                            "read-only": 1,
                            "exposed": "Window",
                            "default": "\"\""
                        }
                    }
                }
            },
            "IDBIndex": {
                "name": "IDBIndex",
                "properties": {
                    "property": {
                        "keyPath": {
                            "name": "keyPath",
                            "override-type": "string | string[]"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "openCursor": {
                            "name": "openCursor",
                            "override-signatures": [
                                "openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>"
                            ]
                        },
                        "openKeyCursor": {
                            "name": "openKeyCursor",
                            "override-signatures": [
                                "openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>"
                            ]
                        },
                        "count": {
                            "name": "count",
                            "override-signatures": [
                                "count(key?: IDBValidKey | IDBKeyRange): IDBRequest<number>"
                            ]
                        },
                        "get": {
                            "name": "get",
                            "override-signatures": [
                                "get(key: IDBValidKey | IDBKeyRange): IDBRequest<any | undefined>"
                            ]
                        },
                        "getAll": {
                            "name": "getAll",
                            "override-signatures": [
                                "getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>"
                            ]
                        },
                        "getAllKeys": {
                            "name": "getAllKeys",
                            "override-signatures": [
                                "getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>"
                            ]
                        },
                        "getKey": {
                            "name": "getKey",
                            "override-signatures": [
                                "getKey(key: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>"
                            ]
                        }
                    }
                }
            },
            "IDBDatabase": {
                "name": "IDBDatabase",
                "methods": {
                    "method": {
                        "createObjectStore": {
                            "name": "createObjectStore",
                            "override-signatures": [
                                "createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore"
                            ]
                        },
                        "transaction": {
                            "name": "transaction",
                            "override-signatures": [
                                "transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "version": {
                            "name": "version",
                            "override-type": "number"
                        }
                    }
                }
            },
            "HTMLCanvasElement": {
                "methods": {
                    "method": {
                        "getContext": {
                            "additional-signatures": [
                                "getContext(contextId: \"2d\", options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D | null",
                                "getContext(contextId: \"bitmaprenderer\", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null",
                                "getContext(contextId: \"webgl\", options?: WebGLContextAttributes): WebGLRenderingContext | null",
                                "getContext(contextId: \"webgl2\", options?: WebGLContextAttributes): WebGL2RenderingContext | null"
                            ]
                        }
                    }
                }
            },
            "OffscreenCanvas": {
                "methods": {
                    "method": {
                        "getContext": {
                            "additional-signatures": [
                                "getContext(contextId: \"2d\", options?: CanvasRenderingContext2DSettings): OffscreenCanvasRenderingContext2D | null",
                                "getContext(contextId: \"bitmaprenderer\", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null",
                                "getContext(contextId: \"webgl\", options?: WebGLContextAttributes): WebGLRenderingContext | null",
                                "getContext(contextId: \"webgl2\", options?: WebGLContextAttributes): WebGL2RenderingContext | null"
                            ]
                        }
                    }
                }
            },
            "BeforeUnloadEvent": {
                "name": "BeforeUnloadEvent",
                "properties": {
                    "property": {
                        "returnValue": {
                            "name": "returnValue",
                            "override-type": "any"
                        }
                    }
                }
            },
            "SVGElement": {
                "name": "SVGElement",
                "properties": {
                    "property": {
                        "className": {
                            "deprecated": 1,
                            "name": "className",
                            "override-type": "any"
                        }
                    }
                }
            },
            "SVGSVGElement": {
                "name": "SVGSVGElement",
                "methods": {
                    "method": {
                        "getEnclosureList": {
                            "name": "getEnclosureList",
                            "override-signatures": [
                                "getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                            ]
                        },
                        "getIntersectionList": {
                            "name": "getIntersectionList",
                            "override-signatures": [
                                "getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                            ]
                        },
                        "setCurrentTime": {
                            "name": "setCurrentTime",
                            "deprecated": 0
                        },
                        "pauseAnimations": {
                            "name": "pauseAnimations",
                            "deprecated": 0
                        },
                        "unpauseAnimations": {
                            "name": "unpauseAnimations",
                            "deprecated": 0
                        },
                        "getCurrentTime": {
                            "name": "getCurrentTime",
                            "deprecated": 0
                        }
                    }
                }
            },
            "Console": {
                "name": "Console",
                "methods": {
                    "method": {
                        "debug": {
                            "name": "debug",
                            "override-signatures": [
                                "debug(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "dir": {
                            "name": "dir",
                            "override-signatures": [
                                "dir(value?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "dirxml": {
                            "name": "dirxml",
                            "override-signatures": [
                                "dirxml(value: any): void"
                            ]
                        },
                        "error": {
                            "name": "error",
                            "override-signatures": [
                                "error(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "info": {
                            "name": "info",
                            "override-signatures": [
                                "info(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "log": {
                            "name": "log",
                            "override-signatures": [
                                "log(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "warn": {
                            "name": "warn",
                            "override-signatures": [
                                "warn(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "group": {
                            "name": "group",
                            "override-signatures": [
                                "group(groupTitle?: string, ...optionalParams: any[]): void"
                            ]
                        },
                        "groupCollapsed": {
                            "name": "groupCollapsed",
                            "override-signatures": [
                                "groupCollapsed(groupTitle?: string, ...optionalParams: any[]): void"
                            ]
                        },
                        "trace": {
                            "name": "trace",
                            "override-signatures": [
                                "trace(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        "profileEnd": {
                            "name": "profileEnd",
                            "override-signatures": [
                                "profileEnd(reportName?: string): void"
                            ]
                        }
                    }
                }
            },
            "FormData": {
                "name": "FormData",
                "methods": {
                    "method": {
                        "append": {
                            "name": "append",
                            "flavor": "Web",
                            "override-signatures": [
                                "append(name: string, value: string | Blob, fileName?: string): void"
                            ]
                        },
                        "set": {
                            "name": "set",
                            "flavor": "Web",
                            "override-signatures": [
                                "set(name: string, value: string | Blob, fileName?: string): void"
                            ]
                        }
                    }
                }
            },
            "ImageData": {
                "name": "ImageData",
                "exposed": "Window Worker",
                "constructor": {
                    "override-signatures": [
                        "new(width: number, height: number): ImageData",
                        "new(array: Uint8ClampedArray, width: number, height: number): ImageData"
                    ]
                }
            },
            "DOMException": {
                "name": "DOMException",
                "constructor": {
                    "override-signatures": [
                        "new(message?: string, name?: string): DOMException"
                    ]
                }
            },
            "HTMLSelectElement": {
                "name": "HTMLSelectElement",
                "properties": {
                    "property": {
                        "selectedOptions": {
                            "name": "selectedOptions",
                            "override-type": "HTMLCollectionOf<HTMLOptionElement>"
                        },
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "select"
                    }
                ],
                "override-index-signatures": [
                    "[name: number]: HTMLOptionElement | HTMLOptGroupElement"
                ]
            },
            "HTMLDataListElement": {
                "name": "HTMLDataListElement",
                "properties": {
                    "property": {
                        "options": {
                            "name": "options",
                            "override-type": "HTMLCollectionOf<HTMLOptionElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "datalist"
                    }
                ]
            },
            "HTMLDirectoryElement": {
                "name": "HTMLDirectoryElement",
                "element": [
                    {
                        "name": "dir"
                    }
                ]
            },
            "HTMLFontElement": {
                "name": "HTMLFontElement",
                "element": [
                    {
                        "name": "font"
                    }
                ]
            },
            "HTMLFrameElement": {
                "name": "HTMLFrameElement",
                "element": [
                    {
                        "name": "frame"
                    }
                ]
            },
            "HTMLFrameSetElement": {
                "name": "HTMLFrameSetElement",
                "element": [
                    {
                        "name": "frameset"
                    }
                ]
            },
            "HTMLTableElement": {
                "name": "HTMLTableElement",
                "properties": {
                    "property": {
                        "rows": {
                            "name": "rows",
                            "override-type": "HTMLCollectionOf<HTMLTableRowElement>"
                        },
                        "tBodies": {
                            "name": "tBodies",
                            "override-type": "HTMLCollectionOf<HTMLTableSectionElement>"
                        }
                    }
                }
            },
            "HTMLTableSectionElement": {
                "name": "HTMLTableSectionElement",
                "methods": {
                    "method": {
                        "insertRow": {
                            "name": "insertRow",
                            "override-signatures": [
                                "insertRow(index?: number): HTMLTableRowElement"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "rows": {
                            "name": "rows",
                            "override-type": "HTMLCollectionOf<HTMLTableRowElement>"
                        }
                    }
                }
            },
            "Element": {
                "name": "Element",
                "methods": {
                    "method": {
                        "getBoundingClientRect": {
                            "name": "getBoundingClientRect",
                            "override-signatures": [
                                "getBoundingClientRect(): ClientRect | DOMRect"
                            ]
                        },
                        "getClientRects": {
                            "name": "getClientRects",
                            "override-signatures": [
                                "getClientRects(): ClientRectList | DOMRectList"
                            ]
                        },
                        "getAttributeNodeNS": {
                            "name": "getAttributeNodeNS",
                            "override-signatures": [
                                "getAttributeNodeNS(namespaceURI: string, localName: string): Attr | null"
                            ]
                        },
                        "getAttributeNode": {
                            "name": "getAttributeNode",
                            "override-signatures": [
                                "getAttributeNode(name: string): Attr | null"
                            ]
                        },
                        "getElementsByTagNameNS": {
                            "name": "getElementsByTagNameNS",
                            "override-signatures": [
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>",
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<SVGElement>",
                                "getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>"
                            ]
                        },
                        "msGetRegionContent": {
                            "name": "msGetRegionContent",
                            "override-signatures": [
                                "msGetRegionContent(): any"
                            ]
                        }
                    }
                }
            },
            "HTMLMediaElement": {
                "name": "HTMLMediaElement",
                "properties": {
                    "property": {
                        "readyState": {
                            "name": "readyState",
                            "override-type": "number"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "play": {
                            "name": "play",
                            "override-signatures": [
                                "play(): Promise<void>"
                            ]
                        }
                    }
                }
            },
            "DataTransferItemList": {
                "name": "DataTransferItemList",
                "methods": {
                    "method": {
                        "item": {
                            "name": "item",
                            "override-signatures": [
                                "item(index: number): DataTransferItem"
                            ]
                        }
                    }
                },
                "override-index-signatures": [
                    "[name: number]: DataTransferItem"
                ]
            },
            "DataTransferItem": {
                "name": "DataTransferItem",
                "methods": {
                    "method": {
                        "webkitGetAsEntry": {
                            "name": "webkitGetAsEntry",
                            "override-signatures": [
                                "webkitGetAsEntry(): any"
                            ]
                        }
                    }
                }
            },
            "IDBCursor": {
                "name": "IDBCursor",
                "properties": {
                    "property": {
                        "key": {
                            "name": "key",
                            "override-type": "IDBValidKey"
                        },
                        "primaryKey": {
                            "name": "primaryKey",
                            "override-type": "IDBValidKey"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "continue": {
                            "name": "continue",
                            "override-signatures": [
                                "continue(key?: IDBValidKey): void"
                            ]
                        },
                        "continuePrimaryKey": {
                            "name": "continuePrimaryKey",
                            "override-signatures": [
                                "continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void"
                            ]
                        },
                        "delete": {
                            "override-signatures": [
                                "delete(): IDBRequest<undefined>"
                            ]
                        },
                        "update": {
                            "override-signatures": [
                                "update(value: any): IDBRequest<IDBValidKey>"
                            ]
                        }
                    }
                }
            },
            "IDBRequest": {
                "name": "IDBRequest",
                "properties": {
                    "property": {
                        "error": {
                            "name": "error",
                            "read-only": 1,
                            "override-type": "DOMException"
                        },
                        "source": {
                            "name": "source",
                            "nullable": false,
                            "override-type": "IDBObjectStore | IDBIndex | IDBCursor"
                        },
                        "result": {
                            "name": "result",
                            "override-type": "T"
                        }
                    }
                },
                "type-parameters": [
                    {
                        "name": "T",
                        "default": "any"
                    }
                ]
            },
            "IDBTransaction": {
                "name": "IDBTransaction",
                "properties": {
                    "property": {
                        "error": {
                            "name": "error",
                            "read-only": 1,
                            "override-type": "DOMException"
                        }
                    }
                }
            },
            "Storage": {
                "name": "Storage",
                "methods": {
                    "method": {
                        "getItem": {
                            "name": "getItem",
                            "override-signatures": [
                                "getItem(key: string): string | null"
                            ]
                        },
                        "key": {
                            "name": "key",
                            "override-signatures": [
                                "key(index: number): string | null"
                            ]
                        }
                    }
                },
                "override-index-signatures": [
                    "[name: string]: any"
                ]
            },
            "HTMLOptionsCollection": {
                "name": "HTMLOptionsCollection",
                "extends": "HTMLCollectionOf<HTMLOptionElement>"
            },
            "SubtleCrypto": {
                "name": "SubtleCrypto",
                "methods": {
                    "method": {
                        "decrypt": {
                            "name": "decrypt",
                            "override-signatures": [
                                "decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        "deriveBits": {
                            "name": "deriveBits",
                            "override-signatures": [
                                "deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        "deriveKey": {
                            "name": "deriveKey",
                            "override-signatures": [
                                "deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        "digest": {
                            "name": "digest",
                            "override-signatures": [
                                "digest(algorithm: string | Algorithm, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        "encrypt": {
                            "name": "encrypt",
                            "override-signatures": [
                                "encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        "exportKey": {
                            "name": "exportKey",
                            "override-signatures": [
                                "exportKey(format: \"jwk\", key: CryptoKey): PromiseLike<JsonWebKey>",
                                "exportKey(format: \"raw\" | \"pkcs8\" | \"spki\", key: CryptoKey): PromiseLike<ArrayBuffer>",
                                "exportKey(format: string, key: CryptoKey): PromiseLike<JsonWebKey | ArrayBuffer>"
                            ]
                        },
                        "generateKey": {
                            "name": "generateKey",
                            "override-signatures": [
                                "generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair | CryptoKey>",
                                "generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair>",
                                "generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        "importKey": {
                            "name": "importKey",
                            "override-signatures": [
                                "importKey(format: \"jwk\", keyData: JsonWebKey, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams | AesKeyAlgorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>",
                                "importKey(format: \"raw\" | \"pkcs8\" | \"spki\", keyData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams | AesKeyAlgorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>",
                                "importKey(format: string, keyData: JsonWebKey | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams | AesKeyAlgorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        "sign": {
                            "name": "sign",
                            "override-signatures": [
                                "sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        "unwrapKey": {
                            "name": "unwrapKey",
                            "override-signatures": [
                                "unwrapKey(format: string, wrappedKey: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: string | Algorithm, unwrappedKeyAlgorithm: string | Algorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        "verify": {
                            "name": "verify",
                            "override-signatures": [
                                "verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<boolean>"
                            ]
                        },
                        "wrapKey": {
                            "name": "wrapKey",
                            "override-signatures": [
                                "wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: string | Algorithm): PromiseLike<ArrayBuffer>"
                            ]
                        }
                    }
                }
            },
            "HTMLInputElement": {
                "name": "HTMLInputElement",
                "properties": {
                    "property": {
                        "files": {
                            "name": "files",
                            "read-only": 0,
                            "override-type": "FileList | null"
                        },
                        "form": {
                            "name": "form",
                            "read-only": 1,
                            "override-type": "HTMLFormElement | null"
                        },
                        "valueAsDate": {
                            "name": "valueAsDate",
                            "override-type": "Date | null"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "setSelectionRange": {
                            "name": "setSelectionRange",
                            "override-signatures": [
                                "setSelectionRange(start: number, end: number, direction?: \"forward\" | \"backward\" | \"none\"): void"
                            ]
                        }
                    }
                }
            },
            "MouseEvent": {
                "name": "MouseEvent",
                "methods": {
                    "method": {
                        "initMouseEvent": {
                            "name": "initMouseEvent",
                            "override-signatures": [
                                "initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void"
                            ]
                        }
                    }
                }
            },
            "DOMStringMap": {
                "name": "DOMStringMap",
                "override-index-signatures": [
                    "[name: string]: string | undefined"
                ]
            },
            "DOMImplementation": {
                "name": "DOMImplementation",
                "methods": {
                    "method": {
                        "hasFeature": {
                            "name": "hasFeature",
                            "override-signatures": [
                                "hasFeature(...args: any[]): true"
                            ],
                            "deprecated": 1
                        },
                        "createDocument": {
                            "name": "createDocument",
                            "override-signatures": [
                                "createDocument(namespaceURI: string | null, qualifiedName: string | null, doctype: DocumentType | null): Document"
                            ]
                        }
                    }
                }
            },
            "HTMLAppletElement": {
                "name": "HTMLAppletElement",
                "properties": {
                    "property": {
                        "form": {
                            "name": "form",
                            "read-only": 1,
                            "override-type": "HTMLFormElement | null"
                        }
                    }
                }
            },
            "HTMLButtonElement": {
                "name": "HTMLButtonElement",
                "properties": {
                    "property": {
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "button"
                    }
                ]
            },
            "HTMLFieldSetElement": {
                "name": "HTMLFieldSetElement",
                "element": [
                    {
                        "name": "fieldset"
                    }
                ]
            },
            "HTMLLabelElement": {
                "name": "HTMLLabelElement",
                "properties": {
                    "property": {
                        "form": {
                            "name": "form",
                            "read-only": 1,
                            "override-type": "HTMLFormElement | null"
                        }
                    }
                }
            },
            "HTMLLegendElement": {
                "name": "HTMLLegendElement",
                "element": [
                    {
                        "name": "legend"
                    }
                ]
            },
            "HTMLMeterElement": {
                "name": "HTMLMeterElement",
                "properties": {
                    "property": {
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "meter"
                    }
                ]
            },
            "HTMLOptGroupElement": {
                "name": "HTMLOptGroupElement",
                "properties": {
                    "property": {
                        "form": {
                            "name": "form",
                            "read-only": 1,
                            "override-type": "HTMLFormElement | null"
                        }
                    }
                },
                "element": [
                    {
                        "name": "optgroup"
                    }
                ]
            },
            "HTMLOptionElement": {
                "name": "HTMLOptionElement",
                "element": [
                    {
                        "name": "option"
                    }
                ]
            },
            "HTMLOutputElement": {
                "name": "HTMLOutputElement",
                "properties": {
                    "property": {
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "output"
                    }
                ]
            },
            "HTMLProgressElement": {
                "name": "HTMLProgressElement",
                "properties": {
                    "property": {
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "element": [
                    {
                        "name": "progress"
                    }
                ]
            },
            "HTMLTextAreaElement": {
                "name": "HTMLTextAreaElement",
                "properties": {
                    "property": {
                        "labels": {
                            "name": "labels",
                            "override-type": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "setSelectionRange": {
                            "name": "setSelectionRange",
                            "override-signatures": [
                                "setSelectionRange(start: number, end: number, direction?: \"forward\" | \"backward\" | \"none\"): void"
                            ]
                        }
                    }
                },
                "element": [
                    {
                        "name": "textarea"
                    }
                ]
            },
            "ServiceWorkerContainer": {
                "name": "ServiceWorkerContainer",
                "methods": {
                    "method": {
                        "getRegistration": {
                            "name": "getRegistration",
                            "override-signatures": [
                                "getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | undefined>"
                            ]
                        }
                    }
                },
                "events": {
                    "event": [
                        {
                            "name": "controllerchange",
                            "type": "Event"
                        },
                        {
                            "name": "message",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "messageerror",
                            "type": "MessageEvent"
                        }
                    ]
                }
            },
            "IntersectionObserverEntry": {
                "name": "IntersectionObserverEntry",
                "properties": {
                    "property": {
                        "boundingClientRect": {
                            "name": "boundingClientRect",
                            "read-only": 1,
                            "override-type": "ClientRect | DOMRect"
                        },
                        "intersectionRect": {
                            "name": "intersectionRect",
                            "read-only": 1,
                            "override-type": "ClientRect | DOMRect"
                        },
                        "rootBounds": {
                            "name": "rootBounds",
                            "read-only": 1,
                            "override-type": "ClientRect | DOMRect"
                        }
                    }
                }
            },
            "Range": {
                "name": "Range",
                "methods": {
                    "method": {
                        "getBoundingClientRect": {
                            "name": "getBoundingClientRect",
                            "override-signatures": [
                                "getBoundingClientRect(): ClientRect | DOMRect"
                            ]
                        },
                        "getClientRects": {
                            "name": "getClientRects",
                            "override-signatures": [
                                "getClientRects(): ClientRectList | DOMRectList"
                            ]
                        }
                    }
                }
            },
            "WebSocket": {
                "name": "WebSocket",
                "methods": {
                    "method": {
                        "send": {
                            "name": "send",
                            "override-signatures": [
                                "send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void"
                            ]
                        }
                    }
                }
            },
            "HTMLTableRowElement": {
                "name": "HTMLTableRowElement",
                "properties": {
                    "property": {
                        "cells": {
                            "name": "cells",
                            "override-type": "HTMLCollectionOf<HTMLTableDataCellElement | HTMLTableHeaderCellElement>"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "insertCell": {
                            "name": "insertCell",
                            "override-signatures": [
                                "insertCell(index?: number): HTMLTableDataCellElement"
                            ]
                        }
                    }
                }
            },
            "XMLHttpRequest": {
                "name": "XMLHttpRequest",
                "events": {
                    "event": [
                        {
                            "name": "readystatechange",
                            "type": "Event"
                        }
                    ]
                }
            },
            "XMLHttpRequestEventTarget": {
                "name": "XMLHttpRequestEventTarget",
                "properties": {
                    "property": {
                        "onloadstart": {
                            "name": "onloadstart",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "onprogress": {
                            "name": "onprogress",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "onabort": {
                            "name": "onabort",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "onerror": {
                            "name": "onerror",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "onload": {
                            "name": "onload",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "ontimeout": {
                            "name": "ontimeout",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        },
                        "onloadend": {
                            "name": "onloadend",
                            "override-type": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
                        }
                    }
                },
                "events": {
                    "event": [
                        {
                            "name": "loadstart",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "progress",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "error",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "load",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "timeout",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "type": "ProgressEvent"
                        }
                    ]
                }
            },
            "FileReader": {
                "name": "FileReader",
                "events": {
                    "event": [
                        {
                            "name": "loadstart",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "progress",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "load",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "error",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "type": "ProgressEvent"
                        }
                    ]
                }
            },
            "MediaList": {
                "name": "MediaList",
                "properties": {
                    "property": {
                        "mediaText": {
                            "name": "mediaText",
                            "override-type": "string"
                        }
                    }
                }
            },
            "MutationRecord": {
                "name": "MutationRecord",
                "properties": {
                    "property": {
                        "type": {
                            "name": "type",
                            "override-type": "MutationRecordType"
                        }
                    }
                }
            },
            "CSSStyleSheet": {
                "name": "CSSStyleSheet",
                "properties": {
                    "property": {
                        "pages": {
                            "name": "pages",
                            "override-type": "any"
                        }
                    }
                }
            },
            "KeyboardEvent": {
                "name": "KeyboardEvent",
                "properties": {
                    "property": {
                        "char": {
                            "name": "char",
                            "override-type": "string",
                            "deprecated": 1
                        }
                    }
                }
            },
            "URL": {
                "name": "URL",
                "constructor": {
                    "override-signatures": [
                        "new(url: string, base?: string | URL): URL"
                    ]
                }
            },
            "EventTarget": {
                "name": "EventTarget",
                "override-exposed": "Window Worker",
                "methods": {
                    "method": {
                        "addEventListener": {
                            "name": "addEventListener",
                            "override-signatures": [
                                "addEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void"
                            ]
                        }
                    }
                }
            },
            "Client": {
                "name": "Client",
                "properties": {
                    "property": {
                        "type": {
                            "name": "type",
                            "override-type": "ClientTypes"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "postMessage": {
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, transfer?: Transferable[]): void"
                            ]
                        }
                    }
                }
            },
            "RTCDataChannel": {
                "name": "RTCDataChannel",
                "events": {
                    "event": [
                        {
                            "name": "open",
                            "type": "Event"
                        },
                        {
                            "name": "message",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "bufferedamountlow",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "type": "RTCErrorEvent"
                        },
                        {
                            "name": "close",
                            "type": "Event"
                        }
                    ]
                }
            },
            "RTCDtlsTransport": {
                "name": "RTCDtlsTransport",
                "events": {
                    "event": [
                        {
                            "name": "statechange",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "type": "RTCErrorEvent"
                        }
                    ]
                }
            },
            "RTCPeerConnection": {
                "name": "RTCPeerConnection",
                "methods": {
                    "method": {
                        "createAnswer": {
                            "name": "createAnswer",
                            "override-signatures": [
                                "createAnswer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>"
                            ]
                        },
                        "createOffer": {
                            "name": "createOffer",
                            "override-signatures": [
                                "createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>"
                            ]
                        },
                        "setLocalDescription": {
                            "name": "setLocalDescription",
                            "override-signatures": [
                                "setLocalDescription(description: RTCSessionDescriptionInit): Promise<void>"
                            ]
                        },
                        "setRemoteDescription": {
                            "name": "setRemoteDescription",
                            "override-signatures": [
                                "setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>"
                            ]
                        },
                        "addIceCandidate": {
                            "name": "addIceCandidate",
                            "override-signatures": [
                                "addIceCandidate(candidate: RTCIceCandidateInit | RTCIceCandidate): Promise<void>"
                            ]
                        }
                    }
                },
                "events": {
                    "event": [
                        {
                            "name": "track",
                            "type": "RTCTrackEvent"
                        },
                        {
                            "name": "negotiationneeded",
                            "type": "Event"
                        },
                        {
                            "name": "signalingstatechange",
                            "type": "Event"
                        },
                        {
                            "name": "iceconnectionstatechange",
                            "type": "Event"
                        },
                        {
                            "name": "icegatheringstatechange",
                            "type": "Event"
                        },
                        {
                            "name": "icecandidate",
                            "type": "RTCPeerConnectionIceEvent"
                        },
                        {
                            "name": "connectionstatechange",
                            "type": "Event"
                        },
                        {
                            "name": "icecandidateerror",
                            "type": "RTCPeerConnectionIceErrorEvent"
                        },
                        {
                            "name": "datachannel",
                            "type": "RTCDataChannelEvent"
                        },
                        {
                            "name": "isolationchange",
                            "type": "Event"
                        },
                        {
                            "name": "statsended",
                            "type": "RTCStatsEvent"
                        }
                    ]
                }
            },
            "Performance": {
                "name": "Performance",
                "properties": {
                    "property": {
                        "navigation": {
                            "deprecated": 1
                        },
                        "timing": {
                            "deprecated": 1
                        }
                    }
                }
            },
            "ServiceWorkerGlobalScope": {
                "name": "ServiceWorkerGlobalScope",
                "events": {
                    "event": [
                        {
                            "name": "install",
                            "type": "ExtendableEvent"
                        },
                        {
                            "name": "activate",
                            "type": "ExtendableEvent"
                        },
                        {
                            "name": "fetch",
                            "type": "FetchEvent"
                        },
                        {
                            "name": "message",
                            "type": "ExtendableMessageEvent"
                        },
                        {
                            "name": "messageerror",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "notificationclick",
                            "type": "NotificationEvent"
                        },
                        {
                            "name": "notificationclose",
                            "type": "NotificationEvent"
                        },
                        {
                            "name": "push",
                            "type": "PushEvent"
                        },
                        {
                            "name": "pushsubscriptionchange",
                            "type": "PushSubscriptionChangeEvent"
                        },
                        {
                            "name": "sync",
                            "type": "SyncEvent"
                        }
                    ]
                }
            },
            "Notification": {
                "name": "Notification",
                "events": {
                    "event": [
                        {
                            "name": "click",
                            "type": "Event"
                        },
                        {
                            "name": "close",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "type": "Event"
                        },
                        {
                            "name": "show",
                            "type": "Event"
                        }
                    ]
                }
            },
            "Cache": {
                "name": "Cache",
                "methods": {
                    "method": {
                        "match": {
                            "name": "match",
                            "override-signatures": [
                                "match(request: RequestInfo, options?: CacheQueryOptions): Promise<Response | undefined>"
                            ]
                        }
                    }
                }
            },
            "CacheStorage": {
                "name": "CacheStorage",
                "methods": {
                    "method": {
                        "match": {
                            "name": "match",
                            "override-signatures": [
                                "match(request: RequestInfo, options?: CacheQueryOptions): Promise<Response | undefined>"
                            ]
                        }
                    }
                }
            },
            "Animation": {
                "name": "Animation",
                "events": {
                    "event": [
                        {
                            "name": "finish",
                            "type": "AnimationPlaybackEvent"
                        },
                        {
                            "name": "cancel",
                            "type": "AnimationPlaybackEvent"
                        }
                    ]
                }
            },
            "KeyframeEffect": {
                "name": "KeyframeEffect",
                "constructor": {
                    "override-signatures": [
                        "new(target: Element | null, keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeEffectOptions): KeyframeEffect",
                        "new(source: KeyframeEffect): KeyframeEffect"
                    ]
                },
                "properties": {
                    "property": {
                        "target": {
                            "name": "target",
                            "override-type": "Element | null"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "getKeyframes": {
                            "name": "getKeyframes",
                            "override-signatures": [
                                "getKeyframes(): ComputedKeyframe[]"
                            ]
                        },
                        "setKeyframes": {
                            "name": "setKeyframes",
                            "override-signatures": [
                                "setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void"
                            ]
                        }
                    }
                }
            },
            "HTMLMarqueeElement": {
                "name": "HTMLMarqueeElement",
                "events": {
                    "event": [
                        {
                            "name": "bounce",
                            "type": "Event"
                        },
                        {
                            "name": "finish",
                            "type": "Event"
                        },
                        {
                            "name": "start",
                            "type": "Event"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "marquee"
                    }
                ]
            },
            "AbortSignal": {
                "name": "AbortSignal",
                "override-exposed": "Window Worker"
            },
            "ErrorEvent": {
                "name": "ErrorEvent",
                "override-exposed": "Window Worker"
            },
            "Event": {
                "properties": {
                    "property": {
                        "srcElement": {
                            "deprecated": 1
                        }
                    }
                }
            },
            "Worker": {
                "name": "Worker",
                "override-exposed": "Window Worker",
                "constructor": {
                    "override-signatures": [
                        "new(stringUrl: string | URL, options?: WorkerOptions): Worker"
                    ]
                },
                "methods": {
                    "method": {
                        "postMessage": {
                            "deprecated": 0,
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, transfer: Transferable[]): void",
                                "postMessage(message: any, options?: PostMessageOptions): void"
                            ]
                        }
                    }
                }
            },
            "Crypto": {
                "name": "Crypto",
                "methods": {
                    "method": {
                        "getRandomValues": {
                            "name": "getRandomValues",
                            "override-signatures": [
                                "getRandomValues<T extends Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null>(array: T): T"
                            ]
                        }
                    }
                }
            },
            "AudioListener": {
                "name": "AudioListener",
                "methods": {
                    "method": {
                        "setPosition": {
                            "name": "setPosition",
                            "deprecated": 1
                        },
                        "setOrientation": {
                            "name": "setOrientation",
                            "deprecated": 1
                        }
                    }
                }
            },
            "OfflineAudioContext": {
                "name": "OfflineAudioContext",
                "events": {
                    "event": [
                        {
                            "name": "complete",
                            "type": "OfflineAudioCompletionEvent"
                        }
                    ]
                }
            },
            "PannerNode": {
                "name": "PannerNode",
                "methods": {
                    "method": {
                        "setPosition": {
                            "name": "setPosition",
                            "deprecated": 1
                        },
                        "setOrientation": {
                            "name": "setOrientation",
                            "deprecated": 1
                        }
                    }
                }
            },
            "ScriptProcessorNode": {
                "name": "ScriptProcessorNode",
                "properties": {
                    "property": {
                        "onaudioprocess": {
                            "name": "onaudioprocess",
                            "deprecated": 1
                        },
                        "bufferSize": {
                            "name": "bufferSize",
                            "deprecated": 1
                        }
                    }
                },
                "events": {
                    "event": [
                        {
                            "name": "audioprocess",
                            "type": "AudioProcessingEvent"
                        }
                    ]
                }
            },
            "MessagePort": {
                "name": "MessagePort",
                "methods": {
                    "method": {
                        "postMessage": {
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, transfer: Transferable[]): void",
                                "postMessage(message: any, options?: PostMessageOptions): void"
                            ]
                        }
                    }
                }
            },
            "ServiceWorker": {
                "name": "ServiceWorker",
                "methods": {
                    "method": {
                        "postMessage": {
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, transfer: Transferable[]): void",
                                "postMessage(message: any, options?: PostMessageOptions): void"
                            ]
                        }
                    }
                }
            },
            "DedicatedWorkerGlobalScope": {
                "name": "DedicatedWorkerGlobalScope",
                "methods": {
                    "method": {
                        "postMessage": {
                            "name": "postMessage",
                            "override-signatures": [
                                "postMessage(message: any, transfer: Transferable[]): void",
                                "postMessage(message: any, options?: PostMessageOptions): void"
                            ]
                        }
                    }
                }
            },
            "HTMLFormElement": {
                "override-index-signatures": [
                    "[index: number]: Element",
                    "[name: string]: any"
                ]
            },
            "Location": {
                "methods": {
                    "method": {
                        "reload": {
                            "signature": [
                                {
                                    "type": "void",
                                    "param": [
                                        {
                                            "name": "forcedReload",
                                            "type": "boolean"
                                        }
                                    ],
                                    "deprecated": 1
                                }
                            ]
                        }
                    }
                }
            },
            "ReadableStream": {
                "type-parameters": [
                    {
                        "name": "R",
                        "default": "any"
                    }
                ],
                "constructor": {
                    "override-signatures": [
                        "new(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number, size?: undefined }): ReadableStream<Uint8Array>",
                        "new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>"
                    ]
                },
                "methods": {
                    "method": {
                        "getReader": {
                            "override-signatures": [
                                "getReader(options: { mode: \"byob\" }): ReadableStreamBYOBReader",
                                "getReader(): ReadableStreamDefaultReader<R>"
                            ]
                        },
                        "pipeThrough": {
                            "override-signatures": [
                                "pipeThrough<T>({ writable, readable }: { writable: WritableStream<R>, readable: ReadableStream<T> }, options?: PipeOptions): ReadableStream<T>"
                            ]
                        },
                        "pipeTo": {
                            "override-signatures": [
                                "pipeTo(dest: WritableStream<R>, options?: PipeOptions): Promise<void>"
                            ]
                        },
                        "tee": {
                            "override-signatures": [
                                "tee(): [ReadableStream<R>, ReadableStream<R>]"
                            ]
                        }
                    }
                }
            },
            "ReadableStreamReader": {
                "override-exposed": "Window Worker",
                "type-parameters": [
                    {
                        "name": "R",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "read": {
                            "override-signatures": [
                                "read(): Promise<ReadableStreamReadResult<R>>"
                            ]
                        }
                    }
                }
            },
            "ReadableStreamReadResult": {
                "type-parameters": [
                    {
                        "name": "T"
                    }
                ],
                "properties": {
                    "property": {
                        "value": {
                            "override-type": "T"
                        }
                    }
                },
                "no-interface-object": "1"
            },
            "ReadableStreamBYOBReader": {
                "methods": {
                    "method": {
                        "read": {
                            "override-signatures": [
                                "read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamReadResult<T>>"
                            ]
                        }
                    }
                },
                "no-interface-object": 1
            },
            "ReadableStreamBYOBRequest": {
                "no-interface-object": 1
            },
            "ReadableStreamDefaultReader": {
                "type-parameters": [
                    {
                        "name": "R",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "read": {
                            "override-signatures": [
                                "read(): Promise<ReadableStreamReadResult<R>>"
                            ]
                        }
                    }
                },
                "no-interface-object": 1
            },
            "ReadableByteStreamController": {
                "properties": {
                    "property": {
                        "byobRequest": {
                            "override-type": "ReadableStreamBYOBRequest | undefined"
                        }
                    }
                },
                "no-interface-object": 1
            },
            "ReadableStreamDefaultController": {
                "type-parameters": [
                    {
                        "name": "R",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "enqueue": {
                            "override-signatures": [
                                "enqueue(chunk: R): void"
                            ]
                        }
                    }
                },
                "no-interface-object": 1
            },
            "WritableStream": {
                "override-exposed": "Window Worker",
                "constructor": {
                    "override-signatures": [
                        "new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>"
                    ]
                },
                "type-parameters": [
                    {
                        "name": "W",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "getWriter": {
                            "override-signatures": [
                                "getWriter(): WritableStreamDefaultWriter<W>"
                            ]
                        }
                    }
                }
            },
            "WritableStreamDefaultController": {
                "override-exposed": "Window Worker",
                "no-interface-object": 1
            },
            "WritableStreamDefaultWriter": {
                "override-exposed": "Window Worker",
                "type-parameters": [
                    {
                        "name": "W",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "write": {
                            "override-signatures": [
                                "write(chunk: W): Promise<void>"
                            ]
                        }
                    }
                },
                "no-interface-object": 1
            },
            "TransformStream": {
                "type-parameters": [
                    {
                        "name": "I",
                        "default": "any"
                    },
                    {
                        "name": "O",
                        "default": "any"
                    }
                ],
                "properties": {
                    "property": {
                        "readable": {
                            "override-type": "ReadableStream<O>"
                        },
                        "writable": {
                            "override-type": "WritableStream<I>"
                        }
                    }
                },
                "constructor": {
                    "override-signatures": [
                        "new<I = any, O = any>(transformer?: Transformer<I, O>, writableStrategy?: QueuingStrategy<I>, readableStrategy?: QueuingStrategy<O>): TransformStream<I, O>"
                    ]
                }
            },
            "TransformStreamDefaultController": {
                "override-exposed": "Window Worker",
                "type-parameters": [
                    {
                        "name": "O",
                        "default": "any"
                    }
                ],
                "methods": {
                    "method": {
                        "enqueue": {
                            "override-signatures": [
                                "enqueue(chunk: O): void"
                            ]
                        }
                    }
                },
                "no-interface-object": 1
            },
            "ByteLengthQueuingStrategy": {
                "override-exposed": "Window Worker",
                "extends": "QueuingStrategy<ArrayBufferView>",
                "constructor": {
                    "override-signatures": [
                        "new(options: { highWaterMark: number }): ByteLengthQueuingStrategy"
                    ]
                }
            },
            "CountQueuingStrategy": {
                "override-exposed": "Window Worker",
                "constructor": {
                    "override-signatures": [
                        "new(options: { highWaterMark: number }): CountQueuingStrategy"
                    ]
                },
                "methods": {
                    "method": {
                        "size": {
                            "override-signatures": [
                                "size(chunk: any): 1"
                            ]
                        }
                    }
                }
            },
            "Permissions": {
                "methods": {
                    "method": {
                        "query": {
                            "override-signatures": [
                                "query(permissionDesc: PermissionDescriptor | DevicePermissionDescriptor | MidiPermissionDescriptor | PushPermissionDescriptor): Promise<PermissionStatus>"
                            ]
                        }
                    }
                }
            }
        }
    },
    "dictionaries": {
        "dictionary": {
            "CustomEventInit": {
                "name": "CustomEventInit",
                "members": {
                    "member": {
                        "detail": {
                            "name": "detail",
                            "override-type": "T",
                            "required": 0
                        }
                    }
                },
                "type-parameters": [
                    {
                        "name": "T",
                        "default": "any"
                    }
                ]
            },
            "AesGcmParams": {
                "members": {
                    "member": {
                        "iv": {
                            "name": "iv",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        },
                        "additionalData": {
                            "name": "additionalData",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "Pbkdf2Params": {
                "members": {
                    "member": {
                        "salt": {
                            "name": "salt",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "HkdfParams": {
                "members": {
                    "member": {
                        "info": {
                            "name": "info",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        },
                        "salt": {
                            "name": "salt",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "AesCbcParams": {
                "members": {
                    "member": {
                        "iv": {
                            "name": "iv",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "AesCtrParams": {
                "members": {
                    "member": {
                        "counter": {
                            "name": "counter",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "RsaOaepParams": {
                "members": {
                    "member": {
                        "label": {
                            "name": "label",
                            "override-type": "Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer"
                        }
                    }
                }
            },
            "RequestInit": {
                "name": "RequestInit",
                "members": {
                    "member": {
                        "headers": {
                            "name": "headers",
                            "override-type": "HeadersInit",
                            "required": 0
                        }
                    }
                }
            },
            "ResponseInit": {
                "name": "ResponseInit",
                "members": {
                    "member": {
                        "headers": {
                            "name": "headers",
                            "override-type": "HeadersInit",
                            "required": 0
                        }
                    }
                }
            },
            "PaymentMethodData": {
                "name": "PaymentMethodData",
                "members": {
                    "member": {
                        "supportedMethods": {
                            "name": "supportedMethods",
                            "override-type": "string | string[]"
                        }
                    }
                }
            },
            "PaymentDetailsModifier": {
                "name": "PaymentDetailsModifier",
                "members": {
                    "member": {
                        "supportedMethods": {
                            "name": "supportedMethods",
                            "override-type": "string | string[]"
                        }
                    }
                }
            },
            "ClientQueryOptions": {
                "name": "ClientQueryOptions",
                "members": {
                    "member": {
                        "type": {
                            "name": "type",
                            "override-type": "ClientTypes"
                        }
                    }
                }
            },
            "BaseKeyframe": {
                "name": "Keyframe",
                "override-index-signatures": [
                    "[property: string]: string | number | null | undefined"
                ]
            },
            "BasePropertyIndexedKeyframe": {
                "name": "PropertyIndexedKeyframes",
                "override-index-signatures": [
                    "[property: string]: string | string[] | number | null | (number | null)[] | undefined"
                ]
            },
            "BaseComputedKeyframe": {
                "name": "ComputedKeyframe",
                "members": {
                    "member": {
                        "offset": {
                            "required": 1
                        },
                        "computedOffset": {
                            "required": 1
                        },
                        "easing": {
                            "required": 1
                        },
                        "composite": {
                            "required": 1
                        }
                    }
                },
                "override-index-signatures": [
                    "[property: string]: string | number | null | undefined"
                ]
            },
            "PipeOptions": {
                "members": {
                    "member": {
                        "preventClose": {
                            "nullable": 0
                        },
                        "preventAbort": {
                            "nullable": 0
                        },
                        "preventCancel": {
                            "nullable": 0
                        },
                        "signal": {
                            "nullable": 0
                        }
                    }
                }
            },
            "QueuingStrategy": {
                "type-parameters": [
                    {
                        "name": "T",
                        "default": "any"
                    }
                ],
                "members": {
                    "member": {
                        "highWaterMark": {
                            "nullable": 0
                        },
                        "size": {
                            "override-type": "QueuingStrategySizeCallback<T>",
                            "nullable": 0
                        }
                    }
                }
            },
            "UnderlyingByteSource": {
                "members": {
                    "member": {
                        "start": {
                            "nullable": 0
                        },
                        "pull": {
                            "nullable": 0
                        },
                        "cancel": {
                            "nullable": 0
                        },
                        "autoAllocateChunkSize": {
                            "nullable": 0
                        },
                        "type": {
                            "override-type": "\"bytes\""
                        }
                    }
                }
            },
            "UnderlyingSource": {
                "type-parameters": [
                    {
                        "name": "R",
                        "default": "any"
                    }
                ],
                "members": {
                    "member": {
                        "start": {
                            "override-type": "ReadableStreamDefaultControllerCallback<R>",
                            "nullable": 0
                        },
                        "pull": {
                            "override-type": "ReadableStreamDefaultControllerCallback<R>",
                            "nullable": 0
                        },
                        "cancel": {
                            "nullable": 0
                        },
                        "type": {
                            "override-type": "undefined"
                        }
                    }
                }
            },
            "UnderlyingSink": {
                "type-parameters": [
                    {
                        "name": "W",
                        "default": "any"
                    }
                ],
                "members": {
                    "member": {
                        "start": {
                            "nullable": 0
                        },
                        "write": {
                            "override-type": "WritableStreamDefaultControllerWriteCallback<W>",
                            "nullable": 0
                        },
                        "close": {
                            "nullable": 0
                        },
                        "abort": {
                            "nullable": 0
                        },
                        "type": {
                            "override-type": "undefined"
                        }
                    }
                }
            },
            "Transformer": {
                "type-parameters": [
                    {
                        "name": "I",
                        "default": "any"
                    },
                    {
                        "name": "O",
                        "default": "any"
                    }
                ],
                "members": {
                    "member": {
                        "start": {
                            "override-type": "TransformStreamDefaultControllerCallback<O>",
                            "nullable": 0
                        },
                        "transform": {
                            "override-type": "TransformStreamDefaultControllerTransformCallback<I, O>",
                            "nullable": 0
                        },
                        "flush": {
                            "override-type": "TransformStreamDefaultControllerCallback<O>",
                            "nullable": 0
                        },
                        "readableType": {
                            "override-type": "undefined"
                        },
                        "writableType": {
                            "override-type": "undefined"
                        }
                    }
                }
            },
            "DevicePermissionDescriptor": {
                "members": {
                    "member": {
                        "name": {
                            "name": "name",
                            "required": 1,
                            "override-type": "\"camera\" | \"microphone\" | \"speaker\""
                        }
                    }
                }
            },
            "MidiPermissionDescriptor": {
                "members": {
                    "member": {
                        "name": {
                            "name": "name",
                            "required": 1,
                            "override-type": "\"midi\""
                        }
                    }
                }
            },
            "PushPermissionDescriptor": {
                "members": {
                    "member": {
                        "name": {
                            "name": "name",
                            "required": 1,
                            "override-type": "\"push\""
                        }
                    }
                }
            },
            "ModuleExportDescriptor": {
                "legacy-namespace": "WebAssembly"
            },
            "ModuleImportDescriptor": {
                "legacy-namespace": "WebAssembly"
            },
            "MemoryDescriptor": {
                "legacy-namespace": "WebAssembly"
            },
            "TableDescriptor": {
                "legacy-namespace": "WebAssembly"
            },
            "GlobalDescriptor": {
                "legacy-namespace": "WebAssembly"
            },
            "WebAssemblyInstantiatedSource": {
                "legacy-namespace": "WebAssembly"
            }
        }
    },
    "typedefs": {
        "typedef": [
            {
                "override-type": "Blob | BufferSource | FormData | URLSearchParams | ReadableStream<Uint8Array> | string",
                "new-type": "BodyInit"
            }
        ]
    }
}